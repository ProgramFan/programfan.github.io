<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  >
  <channel>
    <title xml:lang="en">ProgramFan's Writing Space</title>
    <atom:link type="application/atom+xml" href="http://programfan.github.io/feed.xml" rel="self"/>
    <link>http://programfan.github.io </link>
    <pubDate>Sun, 20 Sep 2015 08:05:50 +0000</pubDate>
    <lastBuildDate>Sun, 20 Sep 2015 08:05:50 +0000</lastBuildDate>
    <language>en-US</language>
    <generator>Jekyll v2.5.3</generator>
    <description></description>
    <image>
      <description>Transform your plain text into static websites and blogs.</description>
      <url>http://programfan.github.io/img/logo-rss.png</url>
      <title>ProgramFan's Writing Space</title>
      <link>http://programfan.github.io</link>
      <width>144</width>
      <height>73</height>
    </image>
    
    <item>
      <title>User-local python package install with pip</title>
      <link>127.0.0.1/contents/2015/09/20/user-local-python-pkg-install-with-pip/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>python</category>
      
      <category>pip</category>
      
      <category>featured</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/09/20/user-local-python-pkg-install-with-pip/</guid>
      <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;motivation&quot;&gt;Motivation&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;PyENV has done a fairly good job in managing user-local python versions, as well as per-version pip packages. However, some packages such as PyQt5 need deep system integration and can not be installed using pip. This makes packages such as jupyter-qtconsole upset. The use of shims in PyENV also forces any provided command to be started with a shell script (so a shell process). This makes packages such as python-powerline much slower.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To solve the above problems, I choose to go back to the standard python user-local install process and choose pip user install. pip user install relys on system python to work correctly, and integrates tightly with system packages. That is to say, if one install PyQt5 using system package manager, he/she can use it in a user-local toyplot package, avoiding install PyQt5 manually (since not possible with pip). Moreover, binaries provided by packages are directly avaliable to the system, which greatly improves the speed of packages such as python-powerline &lt;span class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnote_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;pip user install is good. Then how we do it? It&amp;#8217;s as easy as following the listed steps:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Choose the user install location, say &lt;code&gt;$MYINSTALL&lt;/code&gt;. By default, it&amp;#8217;s
&lt;code&gt;$HOME/.local&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install packages we want using the following command:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nv&quot;&gt;PYTHONUSERBASE&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$MYINSTALL&lt;/span&gt; pip install --user --upgrade &amp;lt;PACKAGES&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Setup python path and binary path&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;export PYTHONPATH=$MYINSTALL:$PYTHONPATH
export PATH=$MYINSTALL/bin:$PATH&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;integrate-with-system-packages&quot;&gt;Integrate with system packages&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you install packages such as numpy, scipy and matplotlib with system package manager, and then install packages such as toyplot or jupyter, you may find that numpy, scipy will not be upgraded since the requirements of toyplot is already meet. This is the power of local install, which integrates well with existing packages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But if you do want a more recent version that system provided, you can append &lt;code&gt;--upgrade&lt;/code&gt; to &lt;code&gt;pip install&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnote_1&quot;&gt;
&lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt; python-powerline uses a binary powerline-client to accelerate shell prompt rendering, which is much more responsive than shell scripts. The latter causes visiable lag even on recent ivebridge CPUs.
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Home-brew python and ruby with PyENV and RVM</title>
      <link>127.0.0.1/contents/2015/07/25/home-python-ruby-with-pyenv-and-rvm/</link>
      <pubDate>Sat, 25 Jul 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>ruby</category>
      
      <category>python</category>
      
      <category>rvm</category>
      
      <category>pyenv</category>
      
      <category>pip</category>
      
      <category>gem</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/07/25/home-python-ruby-with-pyenv-and-rvm/</guid>
      <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m a heavy user of ipython and asciidoctor. IPython is built on python and requires several python packages to work properly. Asciidoctor is built on ruby and also requires several ruby gems. Although Fedora system has ipython and asciidoctor in the main repository, they are something lagging behind the development version. For example, IPython in Fedora 22 is still 2.4.2 while the new stable version is 3.2.0 with a lot new features worth using (Terminal session in the browser). Upgrading the bundled package is impossible. On the other hand, I can not install/upgrade system software on restricted systems such as our development platforms. So I need a way to manage and update my own set of python and ruby packages, preferably without persistant network connections.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I then came accrous RVM, the Ruby Version Manager. RVM is a set of shell scripts to manage several versions of ruby in user&amp;#8217;s home directory, and protects the home-brew ruby and gems from the system&amp;#8217;s default ruby and gems. This makes RVM a perfect ruby version manager, and a perfect ruby environment manager with gem (the ruby package manager).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The same goody exists for python, it is the &lt;a href=&quot;http://github.com/yyuu/pyenv&quot;&gt;PyENV&lt;/a&gt;. It does the same to python as RVM to ruby. It&amp;#8217;s written in shell scripts instead of python. Together with pip (the python package manager), pyenv fits perfectly into the need of home-brew python environment manager.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The other problem remains is that there are often no Internet access in restricted environments, rendering pip and gem useless. Luckly, pip and gem supports local install. We can download the source packages or gems on Internet enabled machines and use local install to install them without internet connection. Both PIP and RubyGem support dependency resolution when downloading packages. This solves all problems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One question may arise is that why not using python distributions such as Anaconda. The reason is simple. Anaconda does not upgrade frequently (although usually more up-to-date than system bundled version), and it bundled very low version of system libs, makeing itself slower than native version. On the other hand, almost all python packages are available via PiPY but only a small portion is in Anaconda.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-to-do-it&quot;&gt;How to do it&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;rvm-and-gems&quot;&gt;RVM and Gems&lt;/h3&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Install RVM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Ruby without Internet using RVM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install gems without Internet using gem&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;pyenv-and-pip&quot;&gt;PyENV and pip&lt;/h3&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Install PyEnv&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install Python without Internet using PyEnv&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;wget -o ~/.pyenv/cache/Python-2.7.10.tar.gz XXXX
pyenv install 2.7.10&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install python packages without Internet using pip&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;pip install --download DIR --no-binary -r requirements.txt  &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
pip install --no-index --find-links&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;DIR -r requirements.txt &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Download packages to DIR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Install packages from DIR without Internet&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Config CJK fonts for Asciidoctor-fopub</title>
      <link>127.0.0.1/contents/2015/07/11/config-cjk-for-asciidoctor-fopub/</link>
      <pubDate>Sat, 11 Jul 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>asciidoc</category>
      
      <category>fopub</category>
      
      <category>cjk</category>
      
      <category>docbook</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/07/11/config-cjk-for-asciidoctor-fopub/</guid>
      <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I blogged on asciidoctor-fopub &lt;a href=&quot;/contents/2015/04/20/convert-chinese-asciidoc-to-pdf/&quot;&gt;previously&lt;/a&gt;. The fonts are configured by generating XML description file. Recently I find from Apache FOP document that fop supports automatically registering fonts and discourage the use of XML description files. It shall make config custom fonts for Apache FOP less pain. So I blog it here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-easiest-approach&quot;&gt;The easiest approach&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Newer versions of FOP support block registration as well as automatically register system fonts. To use this approach, following the steps:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Add font registration directives in &lt;code&gt;fop-config.xml&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;fonts&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;directory&amp;gt;&lt;/span&gt;/usr/share/fonts/dejavu&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/directory&amp;gt;&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;auto-detect/&amp;gt;&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/fonts&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Add a directory of fonts, set &lt;code&gt;recursive=&quot;true&quot;&lt;/code&gt; to recursively scan the directory.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Automatically register system fonts installed.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
If the same font is find by &lt;code&gt;auto-detect&lt;/code&gt; and &lt;code&gt;directory&lt;/code&gt;, the latter takes precedence.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reference font by regular name in &lt;code&gt;fo-pdf.xsl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;pickfont-sans&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;DejaVu Sans, Source Han Sans CN, sans-serif&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-self-contained-approach&quot;&gt;The self-contained approach&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One can customize the font name and its bold/italic variants by configuring directly the &lt;code&gt;font&lt;/code&gt; tag like the original XML description file approach. But at this time, the XML description files are no longer needed. Using this approach, we can select different font for italic/bold/bolditalic variants of a single fontname, which is highly demanded for Chinese document. Here is how:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Put the fonts in a directory, say &lt;code&gt;$FONT_DIR&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;font-base&amp;gt;&lt;/span&gt;$FONT_DIR&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/font-base&amp;gt;&lt;/span&gt;   &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;fonts&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;embed-url=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;SourceHanSansSC.ttf&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;kerning=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;gt;&lt;/span&gt;    &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;font-triplet&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;SourceHanSansSC&amp;quot;&lt;/span&gt;
                  &lt;span class=&quot;tok-na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;weight=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-nt&quot;&gt;/&amp;gt;&lt;/span&gt;         &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/fonts&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Set the base directory so we can use relative path for &lt;code&gt;embed-url&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Reference the font file using relative path.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Set the font triplet and choose a cool name.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reference the font using &lt;code&gt;SourceHanSansSC&lt;/code&gt; in &lt;code&gt;fo-pdf.xsl&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bundle-fonts-with-asciidoctor-fopub-gem&quot;&gt;Appendix A: Bundle fonts with asciidoctor-fopub gem&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In Asciidoctor-fopub, one can do futhur by bundling fonts with the gem. The approach is a direct extension of &lt;a href=&quot;#the-self-contained-approach&quot;&gt;self-contained approach above&lt;/a&gt;. Here are the steps:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Put fonts in &lt;code&gt;$REPO/src/dist/docbook-xsl/fonts&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configure &lt;code&gt;fop-config.xml&lt;/code&gt; and &lt;code&gt;fo-pdf.xsl&lt;/code&gt; using the above approach, but set &lt;code&gt;font-base&lt;/code&gt; to &lt;code&gt;@FONT-BASE@&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the following lines to &lt;code&gt;$REPO/fopub&lt;/code&gt; shell script:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c&quot;&gt;# Modify fop-config.xml to fix bundled font-path&lt;/span&gt;
&lt;span class=&quot;tok-nv&quot;&gt;FOP_CONFIG_XML&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$DOCBOOK_XSL_ABS_DIR/fop-config.xml&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-nv&quot;&gt;BUNDLED_FONTS_DIR&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$DOCBOOK_XSL_ABS_DIR/fonts&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$FOP_CONFIG_XML&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;then&lt;/span&gt;
  sed -i &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;s|@FONT-BASE@|$BUNDLED_FONTS_DIR|g&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$FOP_CONFIG_XML&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Asciidoctor-pdf CJK support status</title>
      <link>127.0.0.1/contents/2015/06/23/asciidoc-pdf-cjk-status/</link>
      <pubDate>Tue, 23 Jun 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>asciidoc</category>
      
      <category>cjk</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/06/23/asciidoc-pdf-cjk-status/</guid>
      <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/asciidoctor/asciidoctor-pdf&quot;&gt;Asciidoc-pdf&lt;/a&gt; is a fast evoluving project. CJK support was still on the wish list when I blog about it last time. But at the day of writing, it&amp;#8217;s CJK support is in somewhat usable state and there are a lot of other progresses (see its milestone on GitHub). More specifically, asciidoctor is able to process CJK documents and produce CJK enabled PDFs with the help of a custom theme, although the line wrap breaks currently (a fix has already been proposed). Here is my experiences.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-technology&quot;&gt;The technology&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Prawn (the underlying layout engine of asciidoc-pdf) provides the ability to use custom TTF font for texts. This enables the display of any language texts (even right-to-left languages) as long as a correct font file is provided. asciidoctor-pdf exports this functionality by providing a font configuration section in the theme and an option to use custom themes. So using CJK charactors in asciidoctor will just work with the right font configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Prawn also supports justified line wrap at word boundaries as well as unicode zero width spaces. This enables custom line wrap rules. One can insert ZWSPs to distinguish CJK words so it can wrap correctly. This is confirmed by one asciidoctor-pdf collaborator but not yet merged into asciidoc-pdf. If this is merged, asciidoctor-pdf then has basic CJK supports, which satisfies at least my own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-configuration&quot;&gt;The configuration&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example to use Adobe source han sans font to produce Chinese enabled PDF via asciidoctor-pdf. I list them in steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Download a TTF version of source han sans font. Prawn only supports ttf fonts, no OTF, no OTCs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy &lt;code&gt;asciidoctor-pdf/data&lt;/code&gt; into another directory, and put source han sans in &lt;code&gt;data/fonts&lt;/code&gt;. In my case, I put &#39;SourceHanSansSC-Normal.ttf&#39; and &#39;SourceHanSansSC-Bold.ttf&#39; inside. The directory looks like:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;data
├── fonts
│   ├── mplus1mn-bold-ascii.ttf
│   ├── mplus1mn-bolditalic-ascii.ttf
│   ├── mplus1mn-italic-ascii.ttf
│   ├── mplus1mn-regular-ascii-conums.ttf
│   ├── mplus1p-regular-multilingual.ttf
│   ├── notoserif-bolditalic-latin.ttf
│   ├── notoserif-bold-latin.ttf
│   ├── notoserif-italic-latin.ttf
│   ├── notoserif-regular-latin.ttf
│   ├── SourceHanSansSC-Bold.ttf
│   └── SourceHanSansSC-Normal.ttf
└── themes
    └── cn-theme.yml&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enable custome fonts in cn-theme.yml:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;catalog&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;NotoSerif&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;notoserif-regular-latin.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;notoserif-bold-latin.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;notoserif-italic-latin.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold_italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;notoserif-bolditalic-latin.ttf&lt;/span&gt;
    &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;Mplus1mn&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1mn-regular-ascii-conums.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1mn-bold-ascii.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1mn-italic-ascii.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold_italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1mn-bolditalic-ascii.ttf&lt;/span&gt;
    &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;Mplus1pMultilingual&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1p-regular-multilingual.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1p-regular-multilingual.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1p-regular-multilingual.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold_italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;mplus1p-regular-multilingual.ttf&lt;/span&gt;
    &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;  &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC-Normal.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC-Bold.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC-Normal.ttf&lt;/span&gt;
      &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;bold_italic&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC-Normal.ttf&lt;/span&gt;
  &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;fallbacks&lt;/span&gt;&lt;span class=&quot;tok-p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;tok-p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;tok-l-Scalar-Plain&quot;&gt;SourceHanSansSC&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Define SourceHanSansSC font&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Use SourceHanSansSC as fallback fonts so only Chinese content uses it.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Make pdf documents with the custom theme&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;asciidoctor-pdf -a pdf-style&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;data/themes/cn-theme.yml -a pdf-fontsdir&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;data/fonts example.adoc&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;an-example&quot;&gt;An example&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The original documents:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asciidoc&quot;&gt;= 中文文档示例
XX, zyangmath@gmail.com
v0.1
:source-highlighter: pygments

== 引言

测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.
测试中文和English混合编排。这是中文。This is English. 什么都没有。 *黑体*. _斜体_.

[source, cpp]
----
// 简单的测试粒子
#include &amp;lt;iostream&amp;gt;

int main(int argc, char** argv) {
  return 0; &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
}
----
&amp;lt;1&amp;gt; 返回0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;What it looks like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/img/example-pdf.png&quot; alt=&quot;example pdf&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Using RVM to Isolate RubyGems on Fedora 21</title>
      <link>127.0.0.1/contents/2015/05/05/using-rvm-to-isolate-rubygems-on-fedora-21/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>rvm</category>
      
      <category>rubygems</category>
      
      <category>featured</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/05/05/using-rvm-to-isolate-rubygems-on-fedora-21/</guid>
      <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ruby comes with a rich set of packages, which is named by the community as &#39;Ruby Gems&#39;. Ruby gems are quite alike python packages. They both have dependencies, they rely on specific interpreter versions, they are both managed by centralized repositories &lt;span class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnote_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Just like Python, Fedora 21 comes with several Ruby gems as packages in official repository (they are named &#39;rubygem-xxx&#39;). But gems in the official repo can be outdated, some gems are missing and there are still other problems which makes the official rubygem package inadequate. The users have to manually install gems, which causes several problems, to name a few:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Gems interfere with system packages.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some user installed gems does not work properly with system installed gems.&lt;/p&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
For example, user install jekyll does not work with system rubygem-json, which stops it from working.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The ideal way to solve the above problem is to setup isolated (possible non-root) ruby environment for specificed purpose. For example, if one managed to setup seperate ruby interpreter and gems for jekyll, problem 2 does not even exists. &lt;a href=&quot;https://rvm.io&quot;&gt;RVM&lt;/a&gt; comes right to the problem.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;introduction-of-rvm&quot;&gt;Introduction of RVM&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;RVM is the asyncornous for &quot;Ruby Version Manager&quot;. It installs and manages several ruby versions as well as gems seperately in a non-root manner and make switching between them super easy. More information is to be found in &lt;a href=&quot;http://rvm.io&quot; class=&quot;bare&quot;&gt;http://rvm.io&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;using-rvm-to-manage-jekyll-gems&quot;&gt;Using RVM to manage jekyll gems&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will use the power of RVM to manage a seperate set of gems for jekyll and jekyll-asciidoc, which is used to generate this blog. We will install RVM as a normal user in the &#39;stand alone&#39; mode, install jekyll related gems as a seperate gemset, and enable the gemset only when in the project repository. The installed gems then live in their own isolated world and other parts in the system is untouched.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;install-rvm&quot;&gt;Install RVM&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Install RVM is straight forward. just go to &lt;a href=&quot;http://rvm.io&quot; class=&quot;bare&quot;&gt;http://rvm.io&lt;/a&gt; for instructions. For those in a hurry, here comes the commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;curl -sSL https://get.rvm.io &lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt; bash -s --no-dotfiles&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After that, RVM will be installed in &lt;code&gt;$HOME/.rvm&lt;/code&gt; and one shall configure the system to setup RVM paths by adding the following to &lt;code&gt;.bashrc&lt;/code&gt; and alike:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;tok-nv&quot;&gt;$HOME&lt;/span&gt;/.rvm/scripts/rvm&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;using-rvm-gemset&quot;&gt;Using RVM gemset&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we create a seperate &lt;code&gt;gemset&lt;/code&gt; for our jekyll related gems. Gemset is introduced by RVM to manage different gem configurations. They live in there own directories and rely on specific ruby interpreter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We would like to use the latest stable ruby for our jekyll (ruby 2.2 at the time of writting). Here comes the steps:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Install ruby 2.2 by RVM.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;rvm install ruby-2.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create and switch to specific gemset.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;rvm use ruby-2.2.2
rvm gemset create jekyll
rvm getset use jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install ruby gems as usual.&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;gem install jekyll jekyll-asciidoc rake-jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
If one want to use bundle to install a set of gems, one shall &lt;code&gt;gem install bundle&lt;/code&gt; first. If this is skipped and the system environment comes with preinstalled bundle, the system will hang up as bundle spawns lots and lots of ruby-mris. I don&amp;#8217;t know why.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;use-specific-gemset-only-in-jekyll-blog-directory&quot;&gt;Use specific gemset only in jekyll blog directory&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we have new ruby-2.2.2 intepreter (the preinstalled on Fedora 21 is ruby-2.1.6) and a set of jekyll related gems. We want to restrict them to my jekyll based blog. This is done by defaulting to system ruby and using RVM &lt;code&gt;.rvmrc&lt;/code&gt; automatically switch to jekyll and ruby-2.2.2 when in blog directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Make RVM use system ruby by default&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;rvm use system --default&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enabling gemset in blog root directory. Assuming blog in &lt;code&gt;$HOME/blog&lt;/code&gt;, create &lt;code&gt;.rvmrc&lt;/code&gt; or &lt;code&gt;.ruby-version&lt;/code&gt;, add the following content:&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;ruby-2.2.2@jekyll&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;enjoy-rvm&quot;&gt;Enjoy RVM&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the above steps, we are using system ruby and gems when in other directories and use ruby-2.2.2 and jekyll gemset in our blog. Life is so amazing from now on. One can install multiple versions and/or multiple gemsets using the above approach, and even better, use &lt;code&gt;rvm use xxx&lt;/code&gt; to switch between them on the fly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnote_1&quot;&gt;
&lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt; Python have PyPI, ruby have RubyGems
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Fix Argument Error with lvalue In Boost.Python</title>
      <link>127.0.0.1/contents/2015/05/01/fix-boost-python-argument-error-lvalue/</link>
      <pubDate>Fri, 01 May 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>boost</category>
      
      <category>python</category>
      
      <category>c++</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/05/01/fix-boost-python-argument-error-lvalue/</guid>
      <description>&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The problem&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://www.boost.org&quot;&gt;Boost.Python&lt;/a&gt; is often used to interface c++ classes to python. It&amp;#8217;s easy to use, handles c++ string and containers automatically and non-intrusive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/Vallioc/YouCompleteMe&quot;&gt;YouCompleteMe&lt;/a&gt; uses Boost.Python to export its c++ classes to python so users can use them in their &lt;code&gt;ycm_extra_conf.py&lt;/code&gt; file. Recently, I encountered the following strange problem when using &lt;code&gt;CompilationDatabase.GetCompilationFlagsForFile&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;ArgumentError: Python argument types in^@
CompilationDatabase.GetCompilationInfoForFile&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;CompilationDatabase, unicode&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;^@
did not match pass:&lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt;c++&lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt; signature:^@
GetCompilationInfoForFile&lt;span class=&quot;tok-o&quot;&gt;(&lt;/span&gt;YouCompleteMe::CompilationDatabase &lt;span class=&quot;tok-o&quot;&gt;{&lt;/span&gt;lvalue&lt;span class=&quot;tok-o&quot;&gt;}&lt;/span&gt;,
std::string&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;^@&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The solution&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s strange that the c++ interface uses lvalue for the object for the first sign. But after digging into the problem, I find that every part of the &lt;code&gt;ycm_extra_conf.py&lt;/code&gt; works as expected, except that the filename is a reference file chosen randomly from the &lt;code&gt;compilation_commands.json&lt;/code&gt;. Then it turns out that python load json strings as &lt;code&gt;unicode&lt;/code&gt; objects but the c++ part only accepts &lt;code&gt;std::string&lt;/code&gt;, which is the real difference in the interface. after manually converting the json string to python string with &lt;code&gt;str&lt;/code&gt;, the error disappeared.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So it seems that Boost.Python handles lvalue well, but has problems with unicode objects and &lt;code&gt;std::string&lt;/code&gt;. Try to use always python string instead of unicode in Boost.Python interfaced c++ classes.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Prevent GCC from optimizing away a snippet of code</title>
      <link>127.0.0.1/contents/2015/04/27/prevent-gcc-optimize-away-code/</link>
      <pubDate>Mon, 27 Apr 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>c++</category>
      
      <category>gcc</category>
      
      <category>featured</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/04/27/prevent-gcc-optimize-away-code/</guid>
      <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nowadays compilers are extremely capable of elimiting &#39;dead&#39; code. But in
benchmarking we need some seemingly &#39;useless&#39; code to do the work we want. For
example, to do computation in registers in order to measure instruction
latency and throughput. In these cases, we need a mechanism to temporarily
disable optimization.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This document keep an up-to-date collections of techniques to temporarily
disable compiler optimizations. These techniques are tested on a recent gcc or
icc compiler.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;using-volatile&quot;&gt;Using volatile&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;volatile&lt;/code&gt; makes compilers be extremely careful (or conservative) on memory
load and store of a variable. Most compilers tend to do no optimizations at
all (even for proven dead code). So the &lt;code&gt;volatile&lt;/code&gt; technique becomes the top 1
used.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;tok-nf&quot;&gt;doTest&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;tok-kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;g++ -std=c++98 -O2&lt;/code&gt; compiles the above code down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;movl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;add&lt;/span&gt;    &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;icpc -std=c++98 -O2&lt;/code&gt; compiles it down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;movl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;incl&lt;/span&gt;   &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;empty-assembly&quot;&gt;Empty assembly&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Another current weakness of compilers is that they are careful with inline
assembly. Some version of gcc and icc tends to leave inline assembly touched
variable intact. This becomes the second technique to prevent optimizations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example, Facebook&amp;#8217;s &lt;a href=&quot;http://github.com/facebook/folly&quot;&gt;Folly&lt;/a&gt; library uses
the following &lt;code&gt;doNotOptimizeAway&lt;/code&gt; function to prevent optimizing an
expression:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-k&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;typename&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tok-kr&quot;&gt;inline&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;doNotOptimizeAway&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;datum&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;asm&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;tok-s&quot;&gt;&amp;quot;+r&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;datum&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;doTest&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;doNotOptimizeAway&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;doNotOptimizeAway&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;icpc -std=c++11 -O2&lt;/code&gt; compiles the above down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;movl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;addl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;edx&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;incl&lt;/span&gt;   &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;ecx&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x8&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;g++ -std=c++11 -O2&lt;/code&gt; compiles straightly down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;xor&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;add&lt;/span&gt;    &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The &lt;code&gt;+r&lt;/code&gt; modifier and the volatile modifier in the assembly is
essential. &lt;code&gt;+r&lt;/code&gt; means the &lt;code&gt;datum&lt;/code&gt; is both read from and write to by the
assembly, so compiler can not optimized it out. &lt;code&gt;volatile&lt;/code&gt; stops the compiler
from removing the empty assembly. If you try &lt;code&gt;=r&lt;/code&gt; instead of &lt;code&gt;+r&lt;/code&gt;, gcc will
optimize it away but icc will keep it.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;compiler-specific-pragma&quot;&gt;Compiler specific pragma&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Compilers provides ways to control their optimizer. gcc provides &lt;code&gt;pragma GCC&lt;/code&gt; as a way to control temporarily the compiler behavior. By using &lt;code&gt;pragma GCC optimize(&quot;O0&quot;)&lt;/code&gt;, the optimization level can be set to zero, which means absolutely no optimize for gcc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;tok-cp&quot;&gt;#pragma GCC push_options&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#pragma GCC optimize(&amp;quot;O0&amp;quot;)&lt;/span&gt;
&lt;span class=&quot;tok-kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;tok-nf&quot;&gt;doTest&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;tok-n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;tok-mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;tok-p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-cp&quot;&gt;#pragma GCC pop_options&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;g++ -std=c++98 -O2&lt;/code&gt; compiles it straight forwardly down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;movl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0xf&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;addl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x4&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;code&gt;icpc -std=c++98 -O2&lt;/code&gt; compiles it down to&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;asm&quot;&gt;&lt;span class=&quot;tok-nf&quot;&gt;sub&lt;/span&gt;    &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rsp&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;movl&lt;/span&gt;   &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0xf&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-kc&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;add&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;mov&lt;/span&gt;    &lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;tok-mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;leaveq&lt;/span&gt;
&lt;span class=&quot;tok-nf&quot;&gt;retq&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Although icc does a strange transformation to the code, it leaves the code any
way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;i class=&quot;fa icon-note&quot; title=&quot;Note&quot;&gt;&lt;/i&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The above pragma can be replaced by function attribute
&lt;code&gt;__attribute__((optimize(&quot;O0&quot;)))&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Convert Chinese Asciidoc Documents to PDF</title>
      <link>127.0.0.1/contents/2015/04/20/convert-chinese-asciidoc-to-pdf/</link>
      <pubDate>Mon, 20 Apr 2015 00:00:00 +0000</pubDate>
      <dc:creator>ProgramFan</dc:creator>
      
      
      <category>asciidoc</category>
      
      <category>pdf</category>
      
      <category>fop</category>
      
      <category>asciidoctor</category>
      
      <guid isPermaLink="true">http://programfan.github.io/contents/2015/04/20/convert-chinese-asciidoc-to-pdf/</guid>
      <description>&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Asciidoctor does well in translating asciidoc documents to html5, docbook and etc. Chinese documents also looks great in html5 and docbook. But sometimes we need to use PDF to share with others. Unfortunately, this is not easy for Chinese documents. This document shares my experience converting Chinese asciidoc documents into pdfs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;overview-of-approaches-to-convert-asciidoc-to-pdfs&quot;&gt;Overview of approaches to convert asciidoc to PDFs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are currently 3 ways to convert asciidoc documents to PDF:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;asciidoctor-pdf&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/asciidoctor/asciidoctor-pdf&quot;&gt;asciidoctor-pdf&lt;/a&gt; is an alpha-state software in ruby to convert asciidoc documents directly into pdf, without any other tools.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;While asciidoctor is nimble, it does not support CJK/multilingual documents.The output of asciidoctor-pdf is quite similar to that of asciidoctor to html5 backends, with coderay or pygments code highlights and similar fonts as the html5 backends. It&amp;#8217;s worth trying for english documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;At the time of writing, asciidoctor-pdf does not support fontawesome icon font. So the callouts and admotions are simple charactors.&lt;/p&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;asciidoctor-latex&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/asciidoctor/asciidoctor-latex&quot;&gt;asciidoctor-latex&lt;/a&gt; is a beta-state software in ruby to add latex support for asciidoctor. It can also convert asciidoc documents directly into latex.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With asciidoctor-latex, we can translate first asciidoc documents into latex and use latex/xelatex to produce pdf output. This makes it possible to modify the contents before final production and use ctex/xeCJK for Chinese documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The drawback of this approach is that it does not support the beautiful  asciidoctor themes.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;asciidoctor-fopub&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/asciidoctor/asciidoctor-fopub&quot;&gt;asciidoctor-fopub&lt;/a&gt; is an fop based approach to produce pdf output for asciidoc docuemnts. It makes use of the docbook backend of asciidoc to produce docbook and uses Apache FOP to produce final pdf documents.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently asciidoctor-fopub produces the best pdf outputs. It supports the original asciidoctor theme, using SVG images for callouts and admotions. Code highlights are supported through xlsthl. It produces nice looking pdfs for English documents out of the box.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Apache FOP supports Chinese pdf outputs using any fonts. But it needs configurations. After proper configurations, it produces relatively good looking pdf docuemnts for Chinese asciidoc documents.&lt;/p&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For the above ways, asciidoctor-fopub is the most mature and so is choosen as my defaults. It&amp;#8217;s worth watching asciidoctor-pdf, which produces the best results but there are still a lot to be done in it to support CJK documents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;install-the-software&quot;&gt;Install the software&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Install asciidoctor-fopub is easy, you can use either the gem install approach or the github download approach.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Gem install&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;code&gt;gem install --pre --user-install asciidoctor-fopub&lt;/code&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;GitHub download&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;&lt;code&gt;git clone &lt;a href=&quot;https://github.com/asciidoctor/asciidoctor-fopub&quot; class=&quot;bare&quot;&gt;https://github.com/asciidoctor/asciidoctor-fopub&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Following either approach, you can find &lt;code&gt;fopub&lt;/code&gt; in either &lt;code&gt;~/bin&lt;/code&gt; or &lt;code&gt;asciidoctor-fopub&lt;/code&gt;. It is the single command for docbook to pdf generation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Note you shall have java (at least 1.7.0) pre installed on your system. Fedora 21 has it default installed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;convert-asciidoc-to-pdf&quot;&gt;Convert asciidoc to PDF&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After successfully installing asciidoctor-fopub, one can use the following commands to convert asciidoc document into PDFs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;asciidoctor -b docbook EXAMPLE.adoc  &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
fopub EXAMPLE.xml &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Convert asciidoctor documents into docbook format with asciidoctor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Generate PDFs using fopub command from asciidoctor-fopub&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;fopub downloads proper versions of fop, docbook-xls and other components for the first run and maintains its internal copy of these software. So for the first time, it needs network connections to function.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If properly configured, the above commands produces nice looking PDFs for Chinese docuemnts out of the box.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;configure-asciidoctor-fopub&quot;&gt;Configure asciidoctor-fopub&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Basicly, there are three steps to configure asciidoctor fopub for proper Chinese PDF production. It mainly follows the FOP font generation and configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;generate-font-metrics&quot;&gt;Generate font metrics&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first step for asciidoctor-fopub Chinese PDF configuration is to generate font metrics for fonts to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;FOP comes with its own format of font metrics and every font to use shall be generated metric files first and registered to FOP. To generate the metric, use the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;java -cp &lt;span class=&quot;tok-nv&quot;&gt;$fop_libs_dir&lt;/span&gt;:&lt;span class=&quot;tok-nv&quot;&gt;$fop_libs_dir&lt;/span&gt;/* &lt;span class=&quot;tok-se&quot;&gt;\ &lt;/span&gt;    &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
    org.apache.fop.fonts.apps.TTFReader -q &lt;span class=&quot;tok-se&quot;&gt;\ &lt;/span&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;$fontfile&lt;/span&gt; &lt;span class=&quot;tok-nv&quot;&gt;$metricfile&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;fop_libs_dir&lt;/code&gt; shall be where the &lt;code&gt;fop.jar&lt;/code&gt; resides&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Invoke the TTFReader from fop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Generate &lt;code&gt;metricfile&lt;/code&gt; for ttf font &lt;code&gt;fontfile&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then put the generated metric file into a single location. I prefer &lt;code&gt;~/.local/share/fop/fonts&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;register-font-to-asciidoctor-fopub&quot;&gt;Register font to asciidoctor-fopub&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After above procedure, one shall create the following registeration in FOP configuration file. For the above gem installed version, the configuration file resides in &lt;code&gt;~/.gem/ruby/gems/asciidoctor-fopub-0.0.1/build/fopub/docbook-xsl/fop-config.xml&lt;/code&gt;. Put the following into &lt;code&gt;&amp;lt;render mime=&#39;application/pdf&#39;&amp;gt;&lt;/code&gt; section:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;font&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;metrics-url=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;$fop_fonts_dir/$metricfile&amp;quot;&lt;/span&gt;   &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
     &lt;span class=&quot;tok-na&quot;&gt;embed-url=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;$fonefile&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;kerning=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;gt;&lt;/span&gt;        &lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt;
     &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;font-triplet&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;$FontName&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;weight=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;normal&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-nt&quot;&gt;/&amp;gt;&lt;/span&gt; &lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt;
&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/font&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Where you put the metric file, better use absolute path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;2&quot;&gt;&lt;/i&gt;&lt;b&gt;2&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Where is the font file, absolute path to the file&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;3&quot;&gt;&lt;/i&gt;&lt;b&gt;3&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Font name, name of the font, choose as you like&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;configure-asciidoctor-fopub-to-use-registered-font&quot;&gt;Configure asciidoctor-fopub to use registered font&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we are almost ready. The last step is to configure fopub to use the registered fonts. Assuming we have registered font with name &#39;SimSun&#39;, we the change the file &lt;code&gt;~/.gem/ruby/gems/asciidoctor-fopub-0.0.1/build/fopub/docbook-xsl/fo-pdf.xsl&lt;/code&gt; to use it:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span class=&quot;tok-na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;tok-s&quot;&gt;&amp;quot;pickfont-sans&amp;quot;&lt;/span&gt;&lt;span class=&quot;tok-nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;xsl:text&amp;gt;&lt;/span&gt;Arial,sans-serif,SimSun&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/xsl:text&amp;gt;&lt;/span&gt;   &lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt;
&lt;span class=&quot;tok-nt&quot;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;colist arabic&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;&lt;i class=&quot;conum&quot; data-value=&quot;1&quot;&gt;&lt;/i&gt;&lt;b&gt;1&lt;/b&gt;&lt;/td&gt;
&lt;td&gt;Append our new fonts for use.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You have to change all corresponding font pickers in the above file. Consult the file for what to change.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;appendix-batch-font-generator&quot;&gt;Appendix: Batch font generator&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following batch font generator is downloaded from internet, included here for convinience.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;tok-c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# ttf2fop - Prepare TrueType fonts for use with Apache FOP&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Copyright (C) 2011 Damien Goutte-Gattat&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# Copying and distribution of this file, with or without modification,&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# are permitted in any medium without royalty provided the copyright&lt;/span&gt;
&lt;span class=&quot;tok-c&quot;&gt;# notice and this notice are preserved.&lt;/span&gt;

&lt;span class=&quot;tok-nb&quot;&gt;set&lt;/span&gt; -e

&lt;span class=&quot;tok-nv&quot;&gt;program_name&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;##*/&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;tok-nv&quot;&gt;fop_libs_dir&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;/usr/share/java
&lt;span class=&quot;tok-nv&quot;&gt;fop_fonts_dir&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$HOME&lt;/span&gt;/.local/share/fop/fonts

die&lt;span class=&quot;tok-o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;tok-o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$program_name: $@&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class=&quot;tok-p&quot;&gt;&amp;amp;&lt;/span&gt;2
    &lt;span class=&quot;tok-nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;tok-o&quot;&gt;}&lt;/span&gt;

show_usage&lt;span class=&quot;tok-o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;tok-o&quot;&gt;{&lt;/span&gt;
    cat &lt;span class=&quot;tok-s&quot;&gt;&amp;lt;&amp;lt;EOH&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;Usage: $program_name [options] TTF_FILE...&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;Generate a FOP metrics file for each TTF file given on the&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;command line. If no file is given, read TTF filenames from&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;standard input.&lt;/span&gt;

&lt;span class=&quot;tok-s&quot;&gt;Options:&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;  -h, --help                Show this help message.&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;  -v, --version             Show the version message.&lt;/span&gt;

&lt;span class=&quot;tok-s&quot;&gt;  -l, --fop-libs PATH       Specify the location of FOP&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;                            Jar files (default: $fop_libs_dir).&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;  -d, --fonts-dir PATH      Specify the directory where the&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;                            metrics file should be stored&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;                            (default: $fop_fonts_dir).&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;EOH&lt;/span&gt;
&lt;span class=&quot;tok-o&quot;&gt;}&lt;/span&gt;

process_ttf_file&lt;span class=&quot;tok-o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;tok-o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;fontfile&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$1&lt;/span&gt;
    &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt; -f &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$fontfile&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;return&lt;/span&gt;

    &lt;span class=&quot;tok-nv&quot;&gt;fontname&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;basename &lt;span class=&quot;tok-nv&quot;&gt;$fontfile&lt;/span&gt; .ttf&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;fontbasename&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-nv&quot;&gt;$fontname&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt; cut -d- -f1&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;tok-nv&quot;&gt;fontstylespec&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-nv&quot;&gt;$fontname&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt; cut -d- -f2&lt;span class=&quot;tok-k&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;tok-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$fontstylespec&amp;quot;&lt;/span&gt; in
    Italic&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;Oblique&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fontstyle&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;italic
        &lt;span class=&quot;tok-nv&quot;&gt;fontweight&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;normal
        &lt;span class=&quot;tok-nv&quot;&gt;filequalifier&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;italic
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;
    Bold&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fontstyle&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;normal
        &lt;span class=&quot;tok-nv&quot;&gt;fontweight&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;bold
        &lt;span class=&quot;tok-nv&quot;&gt;filequalifier&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;bold
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    BoldItalic&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;BoldOblique&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fontstyle&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;italic
        &lt;span class=&quot;tok-nv&quot;&gt;fontweight&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;bold
        &lt;span class=&quot;tok-nv&quot;&gt;filequalifier&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;bold-italic
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    *&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fontstyle&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;normal
        &lt;span class=&quot;tok-nv&quot;&gt;fontweight&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;normal
        &lt;span class=&quot;tok-nv&quot;&gt;filequalifier&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;regular
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;esac&lt;/span&gt;

    java -cp &lt;span class=&quot;tok-nv&quot;&gt;$fop_libs_dir&lt;/span&gt;:&lt;span class=&quot;tok-nv&quot;&gt;$fop_libs_dir&lt;/span&gt;/* &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
      org.apache.fop.fonts.apps.TTFReader -q &lt;span class=&quot;tok-se&quot;&gt;\&lt;/span&gt;
      &lt;span class=&quot;tok-nv&quot;&gt;$fontfile&lt;/span&gt; -ttcname SimSun &lt;span class=&quot;tok-nv&quot;&gt;$fontbasename&lt;/span&gt;-&lt;span class=&quot;tok-nv&quot;&gt;$filequalifier&lt;/span&gt;.xml
    cat &lt;span class=&quot;tok-s&quot;&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;    &amp;lt;font metrics-url=&amp;quot;$fop_fonts_dir/$fontbasename-$filequalifier.xml&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;        embed-url=&amp;quot;$fontfile&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;        kerning=&amp;quot;yes&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;        &amp;lt;font-triplet name=&amp;quot;$fontbasename&amp;quot; style=&amp;quot;$fontstyle&amp;quot; weight=&amp;quot;$fontweight&amp;quot; /&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;    &amp;lt;/font&amp;gt;&lt;/span&gt;
&lt;span class=&quot;tok-s&quot;&gt;EOF&lt;/span&gt;
&lt;span class=&quot;tok-o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;tok-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;tok-nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$1&amp;quot;&lt;/span&gt; in
    -h&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;--help&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        show_usage
        &lt;span class=&quot;tok-nb&quot;&gt;exit &lt;/span&gt;0
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    -v&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;--version&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        sed -n &lt;span class=&quot;tok-s1&quot;&gt;&amp;#39;2,/^$/ s/^# //p&amp;#39;&lt;/span&gt; &lt;span class=&quot;tok-nv&quot;&gt;$0&lt;/span&gt;
        &lt;span class=&quot;tok-nb&quot;&gt;exit &lt;/span&gt;0
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    -l&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;--fop-libs&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$2&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;||&lt;/span&gt; die &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;missing argument for option --fop-libs&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fop_libs_dir&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$2&lt;/span&gt;
        &lt;span class=&quot;tok-nb&quot;&gt;shift &lt;/span&gt;2
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    -d&lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt;--fonts-dir&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt; -n &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$2&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;||&lt;/span&gt; die &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;missing argument for option --fonts-dir&amp;quot;&lt;/span&gt;
        &lt;span class=&quot;tok-nv&quot;&gt;fop_fonts_dir&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;tok-nv&quot;&gt;$2&lt;/span&gt;
        &lt;span class=&quot;tok-nb&quot;&gt;shift &lt;/span&gt;2
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;

    *&lt;span class=&quot;tok-o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;tok-nb&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;tok-p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;esac&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;done&lt;/span&gt;

&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;&amp;lt;?xml version=\&amp;quot;1.0\&amp;quot;?&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;&amp;lt;fonts&amp;gt;&amp;quot;&lt;/span&gt;

&lt;span class=&quot;tok-k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;[&lt;/span&gt; -z &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$*&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;then&lt;/span&gt;
    cat &lt;span class=&quot;tok-p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;tok-nb&quot;&gt;read &lt;/span&gt;f &lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;do&lt;/span&gt; process_ttf_file &lt;span class=&quot;tok-nv&quot;&gt;$f&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;tok-k&quot;&gt;for&lt;/span&gt; f in &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;$@&amp;quot;&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;do&lt;/span&gt; process_ttf_file &lt;span class=&quot;tok-nv&quot;&gt;$f&lt;/span&gt; &lt;span class=&quot;tok-p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;tok-k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;tok-k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;tok-nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;tok-s2&quot;&gt;&amp;quot;&amp;lt;/fonts&amp;gt;&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;appendix-2-generate-chinese-section-titles&quot;&gt;Appendix 2: Generate chinese section titles&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The default document generated by asciidoctor docbook backend uses English for document language, which makes the section title, table title, table of contents etc. English. We can set the &lt;code&gt;lang&lt;/code&gt; attribute to &lt;code&gt;zh_CN&lt;/code&gt; when generating Chinese document:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;pygments highlight&quot;&gt;&lt;code data-lang=&quot;bash&quot;&gt;asciidoctor -b docbook -a &lt;span class=&quot;tok-nv&quot;&gt;lang&lt;/span&gt;&lt;span class=&quot;tok-o&quot;&gt;=&lt;/span&gt;zh_CN XXX.adoc&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
